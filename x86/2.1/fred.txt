     1                                  %include "asm_io.inc"
     2                              <1> 	extern  read_int, print_int, print_string
     3                              <1> 	extern	read_char, print_char, print_nl
     4                              <1> 	extern  sub_dump_regs, sub_dump_mem, sub_dump_math, sub_dump_stack
     5                              <1> 
     6                              <1> %macro 	dump_regs 1
     7                              <1> 	push	  dword %1
     8                              <1> 	call	  sub_dump_regs
     9                              <1> %endmacro
    10                              <1> 
    11                              <1> 
    12                              <1> ;
    13                              <1> ; usage: dump_mem label, start-address, # paragraphs
    14                              <1> %macro  dump_mem 3
    15                              <1> 	push	 dword %1
    16                              <1> 	push	 dword %2
    17                              <1> 	push	 dword %3
    18                              <1> 	call	 sub_dump_mem
    19                              <1> %endmacro
    20                              <1> 
    21                              <1> %macro	dump_math 1
    22                              <1> 	push	 dword %1
    23                              <1> 	call	 sub_dump_math
    24                              <1> %endmacro
    25                              <1> 
    26                              <1> %macro  dump_stack 3
    27                              <1> 	push	 dword %3
    28                              <1>         push     dword %2
    29                              <1> 	push	 dword %1
    30                              <1>         call     sub_dump_stack
    31                              <1> %endmacro
    32                                  segment .data 
    33                                  
    34                                  segment .bss 
    35                                  
    36                                  segment .text
    37                                          global  asm_main
    38                                  asm_main:
    39 00000000 C8000000                        enter   0,0               ; setup routine
    40 00000004 60                              pusha
    41                                  	;***************CODE STARTS HERE***************************
    42 00000005 B8F6FFFFFF              	mov eax, -10
    43 0000000A BB14000000              	mov ebx, 20
    44 0000000F B9E2FFFFFF              	mov ecx, -30		
    45                                  	;***************CODE ENDS HERE*****************************
    46 00000014 61                              popa
    47 00000015 B800000000                      mov     eax, 0            ; return back to C
    48 0000001A C9                              leave                     
    49 0000001B C3                              ret
